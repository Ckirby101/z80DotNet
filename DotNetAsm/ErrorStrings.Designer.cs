//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotNetAsm {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ErrorStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotNetAsm.ErrorStrings", typeof(ErrorStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assertion Failed: &apos;{0}&apos;.
        /// </summary>
        public static string AssertionFailure {
            get {
                return ResourceManager.GetString("AssertionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown or invalid expression: &apos;{0}&apos;.
        /// </summary>
        public static string BadExpression {
            get {
                return ResourceManager.GetString("BadExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot resolve anonymous label.
        /// </summary>
        public static string CannotResolveAnonymousLabel {
            get {
                return ResourceManager.GetString("CannotResolveAnonymousLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closure &apos;{0}&apos; does not close a block.
        /// </summary>
        public static string ClosureDoesNotCloseBlock {
            get {
                return ResourceManager.GetString("ClosureDoesNotCloseBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closure {0} does not close a {1}.
        /// </summary>
        public static string ClosureDoesNotCloseMacro {
            get {
                return ResourceManager.GetString("ClosureDoesNotCloseMacro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not process binary file &apos;{0}&apos;.
        /// </summary>
        public static string CouldNotProcessBinary {
            get {
                return ResourceManager.GetString("CouldNotProcessBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type definition for unknown type &apos;{0}&apos;.
        /// </summary>
        public static string DefininingUnknownType {
            get {
                return ResourceManager.GetString("DefininingUnknownType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directive &apos;{0}&apos; takes no arguments.
        /// </summary>
        public static string DirectiveTakesNoArguments {
            get {
                return ResourceManager.GetString("DirectiveTakesNoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding &apos;{0}&apos; is not a name or option.
        /// </summary>
        public static string EncodingNameNotValid {
            get {
                return ResourceManager.GetString("EncodingNameNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filename not specified.
        /// </summary>
        public static string FilenameNotSpecified {
            get {
                return ResourceManager.GetString("FilenameNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} previously included. Possible circular reference?.
        /// </summary>
        public static string FilePreviouslyIncluded {
            get {
                return ResourceManager.GetString("FilePreviouslyIncluded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal quantity &apos;{0}&apos;.
        /// </summary>
        public static string IllegalQuantity {
            get {
                return ResourceManager.GetString("IllegalQuantity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter reference &apos;{0}&apos;.
        /// </summary>
        public static string InvalidParamRef {
            get {
                return ResourceManager.GetString("InvalidParamRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Program Counter assignment &apos;{0}&apos;.
        /// </summary>
        public static string InvalidPCAssignment {
            get {
                return ResourceManager.GetString("InvalidPCAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symbol &apos;{0}&apos; not found.
        /// </summary>
        public static string LabelNotDefined {
            get {
                return ResourceManager.GetString("LabelNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symbol &apos;{0}&apos; is not a valid label name.
        /// </summary>
        public static string LabelNotValid {
            get {
                return ResourceManager.GetString("LabelNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redefinition of label &apos;{0}&apos;.
        /// </summary>
        public static string LabelRedefinition {
            get {
                return ResourceManager.GetString("LabelRedefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Macro parameter reference must be a letter or digit.
        /// </summary>
        public static string MacroParamIncorrect {
            get {
                return ResourceManager.GetString("MacroParamIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Macro parameter not specified.
        /// </summary>
        public static string MacroParamNotSpecified {
            get {
                return ResourceManager.GetString("MacroParamNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redefinition of macro &apos;{0}&apos;.
        /// </summary>
        public static string MacroRedefinition {
            get {
                return ResourceManager.GetString("MacroRedefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing closure for block.
        /// </summary>
        public static string MissingClosure {
            get {
                return ResourceManager.GetString("MissingClosure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing closure for {0}.
        /// </summary>
        public static string MissingClosureMacro {
            get {
                return ResourceManager.GetString("MissingClosureMacro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General syntax error.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program Counter overflow &apos;{0}&apos;.
        /// </summary>
        public static string PCOverflow {
            get {
                return ResourceManager.GetString("PCOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pstring size too large.
        /// </summary>
        public static string PStringSizeTooLarge {
            get {
                return ResourceManager.GetString("PStringSizeTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quote string is not enclosed.
        /// </summary>
        public static string QuoteStringNotEnclosed {
            get {
                return ResourceManager.GetString("QuoteStringNotEnclosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Macro or segment &apos;{0}&apos; is being called recursively.
        /// </summary>
        public static string RecursiveMacro {
            get {
                return ResourceManager.GetString("RecursiveMacro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too few arguments for directive &apos;{0}&apos;.
        /// </summary>
        public static string TooFewArguments {
            get {
                return ResourceManager.GetString("TooFewArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many arguments for directive &apos;{0}&apos;.
        /// </summary>
        public static string TooManyArguments {
            get {
                return ResourceManager.GetString("TooManyArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redefine type to &apos;{0}&apos; because it is already a type.
        /// </summary>
        public static string TypeDefinitionError {
            get {
                return ResourceManager.GetString("TypeDefinitionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type name &apos;{0}&apos; is a reserved symbol name.
        /// </summary>
        public static string TypeNameReserved {
            get {
                return ResourceManager.GetString("TypeNameReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown instruction or incorrect parameters for instruction &apos;{0}&apos;.
        /// </summary>
        public static string UnknownInstruction {
            get {
                return ResourceManager.GetString("UnknownInstruction", resourceCulture);
            }
        }
    }
}
